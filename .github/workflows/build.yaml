name: Unit Tests
on: [push, pull_request]

env:
  VSTEST_CONNECTION_TIMEOUT: 180

jobs:
  test:
    runs-on: windows-latest
    strategy:
      matrix:
        framework: ["net472", "netcoreapp3.1"]
        suite: ["dotNetRdf.Tests", "dotNetRdf.Dynamic.Tests", "dotNetRdf.Inferencing.Tests", "dotNetRdf.Ontology.Tests", "dotNetRdf.Shacl.Tests", "dotNetRdf.Skos.Tests", "dotNetRdf.Data.DataTables.Tests", "dotNetRdf.Query.FullText.Tests", "dotNetRdf.Writing.HtmlSchema.Tests",
        "dotNetRdf.TestSuite.RdfStar"]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Run Tests
      run: dotnet test -c Release --filter "Category!=explicit" --framework ${{ matrix.framework }} --collect:"XPlat Code Coverage" Testing\${{matrix.suite}}
    - name: Upload Code Coverage
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage ${{matrix.suite}} ${{matrix.framework}}
        path: Testing\${{matrix.suite}}\TestResults\**\coverage.cobertura.xml
    
  fusekiTests:
    runs-on: ubuntu-latest
    steps:
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    - name: Install .NET Core 3.1 Framework
      run: curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin -Channel 3.1
    - name: Validate Installation
      run: dotnet --list-runtimes
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Start Fuseki
      run: docker run --rm -d -p 3030:3030 --name fuseki atomgraph/fuseki --mem /ds
    - name: Test Fuskei Connector
      run: dotnet test -c Release --framework netcoreapp3.1 --collect:"XPlat Code Coverage" Testing/dotNetRdf.Connectors.Fuseki.Tests/dotNetRdf.Connectors.Fuseki.Tests.csproj
    - name: Stop Fuseki
      run: docker stop fuseki
    - name: Upload Code Coverage
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage dotNetRdf.Connectors.Fuseki.Tests netcoreapp5.0
        path: Testing/dotNetRdf.Connectors.Fuseki.Tests/TestResults/*/coverage.cobertura.xml
        
  virtuosoTests:
    runs-on: ubuntu-latest
    steps:
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    - name: Install .NET Core 3.1 Framework
      run: curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin -Channel 3.1
    - name: Validate Installation
      run: dotnet --list-runtimes
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build Virtuoso Image
      run: docker build -t virtuoso:latest .
      working-directory: Testing/test_images/virtuoso
    - name: Start Virtuoso
      run: docker run --rm -d -p 8890:8890 -p 1111:111 --name virtuoso virtuoso:latest
    - name: Test Virtuoso Connector
      run: dotnet test -c Release --framework netcoreapp3.1 --collect:"XPlat Code Coverage" Testing/dotNetRdf.Connectors.Virtuoso.Tests/dotNetRdf.Connectors.Virtuoso.Tests.csproj
    - name: Stop Virtuoso
      run: docker stop virtuoso
    - name: Upload Code Coverage
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage dotNetRdf.Connectors.Virtuoso.Tests netcoreapp5.0
        path: Testing/dotNetRdf.Connectors.Virtuoso.Tests/TestResults/*/coverage.cobertura.xml
      
  report:
    needs: [ "test", "fusekiTests", "virtuosoTests" ]
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Download coverage artifacts
      uses: actions/download-artifact@v2
    - name: Generate coverage report
      uses: danielpalme/ReportGenerator-GitHub-Action@4.5.8
      with:
        reports: '*\*\*.xml'
        targetdir: 'coveragereport'
        reporttypes: 'HtmlInline;Cobertura;Badges'
        tag: '${{ github.run_number }}_${{ github.run_id }}'
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: coveragereport\*

