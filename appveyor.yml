image: Visual Studio 2019

branches:
  except:
  - maintenance/1.x

environment:
  SHFBROOT:  C:\Program Files (x86)\EWSoftware\Sandcastle Help File Builder\
  SandCastleZipFile: SHFBInstaller.zip
  SandCastleUri: https://github.com/EWSoftware/SHFB/releases/download/v2019.11.17.0/SHFBInstaller_v2019.11.17.0.zip
  
install:
  - choco install gitversion.portable -pre -y
  - ps: Start-FileDownload $env:SandCastleUri -FileName $env:SandCastleZipFile
  - cmd: 7z x SHFBInstaller.zip -y
  - ps: msiexec /i InstallResources\SandcastleHelpFileBuilder.msi /quiet /qn /norestart /log install.log

before_build:
  - ps: gitversion /l console /output buildserver /updateassemblyinfo
  - ps: dotnet restore dotNetRDF.sln

configuration: Release

build_script:
  - ps: dotnet build dotNetRDF.sln --configuration=Release

test_script:
  - ps: dotnet test -c Release --filter "Category!=explicit" --framework netcoreapp3.1 Testing\unittest\unittest.csproj
  - ps: dotnet test -c Release --filter "Category!=explicit" --framework net472 Testing\unittest\unittest.csproj
  - ps: dotnet test -c Release --filter "Category=fulltext" --framework net472
#  - cmd: docker build Testing\test_images\fuseki -t fuseki # Container build fails at the step where it creates the data directory /mnt/fuseki
  - cmd: docker run --rm -d -p 3030:3030 --name fuseki atomgraph/fuseki --mem /ds & exit 0
  - cmd: dotnet test -c Release --framework netcoreapp3.1 Testing\dotNetRDF.Connectors.Fuseki.Tests\dotNetRDF.Connectors.Fuseki.Tests.csproj
  - cmd: docker stop fuseki & exit 0
  
before_deploy:
  - cmd: msbuild Build\shfb\dotnetrdf.shfbproj /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll" /p:Configuration=%CONFIGURATION% /p:HelpFileVersion=%GitVersion_NuGetVersion%

deploy:
  - provider: GitHub
    description: 'dotNetRDF $(GitVersion_SemVer)'
    auth_token:
      secure: j3GoyDavErTD91EcSTfNBbQyTc7tqpp+klmmz85xC4fjbE8Gl2brFjr8t3/Zzwmk
    on:
      appveyor_repo_tag: true 
    artifact: Build\shfb\Help.zip, Build\shfb\Help\dotNetRDFApi.chm, /.*\.nupkg/
  - provider: NuGet
    api_key:
      secure: 9C1lU8kn3BzRpB8lbejxH64fsAlmsFW/o6WWjkK+e4j+YAwrSZ2yh/AezU9kYrzI
    on:
      appveyor_repo_tag: true 
    artifact: /((?!Spin).)*.nupkg/

artifacts:
  - path: 'nugets\*.nupkg'
  - path: 'Build\shfb\Help\dotNetRDFApi.chm'
  - path: 'Build\shfb\Help'
  - path: 'opencover.xml'

on_finish:
  - ps: Push-AppveyorArtifact 'test.log'
